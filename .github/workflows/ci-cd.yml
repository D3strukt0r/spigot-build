name: CI/CD

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version of Spigot ('latest', 'all', specific version)"
        required: true
        default: "latest"

jobs:
  # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#tojson
  create-matrix:
    runs-on: ubuntu-latest
    name: Create Matrix
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Create Matrix
        id: set-matrix
        run: |
          if [ "${{ github.event.inputs.version }}" == "latest" ]; then
              # Only get the latest version
              versions=($(
                  curl -s https://hub.spigotmc.org/versions/ |
                  grep -E "*[0-9]\.[0-9]{1,2}(\.[0-9]){0,}?(-pre[0-9]){0,}" -o |
                  uniq |
                  sed 's/\.$//' |
                  sed 's/-pre/~pre/' |
                  sort --version-sort |
                  sed 's/~pre/-pre/' |
                  tail -n 1
              ))
          elif [ "${{ github.event.inputs.version }}" == "all" ]; then
              versions=($(
                  curl -s https://hub.spigotmc.org/versions/ |
                  grep -E "*[0-9]\.[0-9]{1,2}(\.[0-9]){0,}?(-pre[0-9]){0,}" -o |
                  uniq |
                  sed 's/\.$//' |
                  sed 's/-pre/~pre/' |
                  sort --version-sort |
                  sed 's/~pre/-pre/'
              ))
          else
              versions=${{ github.event.inputs.version }}
          fi

          versions_json=$(
              printf '%s\n' "${versions[@]}" |
              jq --raw-input . |
              jq --compact-output --slurp '{spigot:.}'
          )
          echo "::set-output name=matrix::$versions_json"

  build:
    needs: create-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.create-matrix.outputs.matrix) }}
    name: Build Spigot v${{ matrix.spigot }}
    steps:
      - uses: actions/cache@v2
        with:
          path: .
          key: ${{ runner.os }}-spigot-${{ matrix.spigot }}
          restore-keys: |
            ${{ runner.os }}-spigot-
            ${{ runner.os }}-

      - name: Install latest BuildTools
        run: curl --fail --silent --show-error --location --output BuildTools.jar https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar

      - name: Build
        run: java -Xmx4G -jar BuildTools.jar --rev ${{ matrix.spigot }}

      - uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.spigot }}
          path: |
            spigot-*.jar
            craftbukkit-*.jar

      - name: Rename to spigot.jar
        run: find . -iname 'spigot-*.jar' -exec mv {} spigot.jar \;

      - name: Check if release exists
        id: release-exists
        continue-on-error: true
        run: git rev-list "${{ matrix.spigot }}" >/dev/null

      - uses: actions/create-release@v1
        if: steps.release-exists.outcome == 'failure'
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ matrix.spigot }}
          release_name: ${{ matrix.spigot }}
          draft: false

      - uses: actions/upload-release-asset@v1
        id: upload-release-asset 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./spigot.jar
          asset_name: spigot.jar
          asset_content_type: application/java-archive
